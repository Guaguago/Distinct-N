import argparse
import numpy as np
import distinct_n


def distinct_score(infile, n):
    """
    Compute distinct-N on a response file.
    :param infile: string, responses generated by the model. Each response is on its own line.
    :param n: int, ngrams.
    :return:
    """
    with open(infile, 'r') as f:
        # Compute metric for each line of a file.
        scores = [distinct_n.distinct_n_sentence_level(sentence.split(), n) for sentence in f.readlines()]
    scores = np.asarray(scores)
    return np.mean(scores), 1.96 * np.std(scores) / len(scores), np.std(scores)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('predicted', help="predicted text file, one example per line")
    parser.add_argument('-n', type=int, default=2, help="n to use as in distinct-N")
    args = parser.parse_args()

    r = distinct_score(args.predicted, args.n)
    print("Distinct-%d: %f +/- %f ( %f )" % (args.n, r[0], r[1], r[2]))
